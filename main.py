import sounddevice as sd
import numpy as np
from kokoro_onnx import Kokoro

kokoro = Kokoro("kokoro-v1.0.onnx", "voices-v1.0.bin")

def stream_audio(text, voice="bm_lewis", speed=1.0, lang="en-us"):
    """Streams audio generated by kokoro."""
    samples, sample_rate = kokoro.create(text, voice=voice, speed=speed, lang=lang)
    print(f"Samples shape: {samples.shape}")

    current_frame = 0

    def callback(outdata, frames, time, status):
        """Callback function for sounddevice stream."""
        nonlocal current_frame
        if status:
            print(status)
        start = current_frame
        end = current_frame + frames
        chunk = samples[start:end]

        if len(chunk) < frames:
            chunk = np.pad(chunk, (0, frames - len(chunk)), mode='constant')
            chunk = chunk.reshape(-1, 1) #Reshape to (n, 1)
            outdata[:] = chunk
            raise sd.CallbackStop()
        else:
            chunk = chunk.reshape(-1, 1) #Reshape to (n, 1)
            outdata[:] = chunk
        current_frame += frames

    stream = sd.OutputStream(samplerate=sample_rate, channels=1, callback=callback)
    with stream:
        stream.start()
        while stream.active:
            sd.sleep(100)

print("Audio playback complete.")